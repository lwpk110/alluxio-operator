---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: alluxios.stack.zncdata.net
spec:
  group: stack.zncdata.net
  names:
    kind: Alluxio
    listKind: AlluxioList
    plural: alluxios
    singular: alluxio
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Alluxio is the Schema for the alluxios API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AlluxioSpec defines the desired state of Alluxio
            properties:
              image:
                properties:
                  pullPolicy:
                    default: IfNotPresent
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    type: string
                  repository:
                    default: alluxio/alluxio
                    type: string
                  tag:
                    default: latest
                    type: string
                required:
                - pullPolicy
                type: object
              jobMaster:
                properties:
                  args:
                    default: '["job-master"]'
                    items:
                      type: string
                    type: array
                  ports:
                    properties:
                      embedded:
                        default: 20003
                        format: int32
                        type: integer
                      rpc:
                        default: 20001
                        format: int32
                        type: integer
                      web:
                        default: 20002
                        format: int32
                        type: integer
                    type: object
                  properties:
                    additionalProperties:
                      type: string
                    type: object
                  resources:
                    properties:
                      limits:
                        properties:
                          cpu:
                            default: 4000m
                            type: string
                          memory:
                            default: 4Gi
                            type: string
                        type: object
                      requests:
                        properties:
                          cpu:
                            default: 500m
                            type: string
                          memory:
                            default: 500Mi
                            type: string
                        type: object
                    type: object
                type: object
              jobWorker:
                properties:
                  args:
                    default: '["job-worker"]'
                    items:
                      type: string
                    type: array
                  ports:
                    properties:
                      data:
                        default: 30002
                        format: int32
                        type: integer
                      rpc:
                        default: 30001
                        format: int32
                        type: integer
                      web:
                        default: 30003
                        format: int32
                        type: integer
                    type: object
                  properties:
                    additionalProperties:
                      type: string
                    type: object
                  resources:
                    properties:
                      limits:
                        properties:
                          cpu:
                            default: 4000m
                            type: string
                          memory:
                            default: 4Gi
                            type: string
                        type: object
                      requests:
                        properties:
                          cpu:
                            default: 500m
                            type: string
                          memory:
                            default: 500Mi
                            type: string
                        type: object
                    type: object
                type: object
              master:
                properties:
                  args:
                    default:
                    - master-only
                    - --no-format
                    items:
                      type: string
                    type: array
                  ports:
                    properties:
                      debugPort:
                        default: 19999
                        format: int32
                        type: integer
                      embedded:
                        default: 19200
                        format: int32
                        type: integer
                      rpcPort:
                        default: 19998
                        format: int32
                        type: integer
                    type: object
                  properties:
                    additionalProperties:
                      type: string
                    type: object
                  replicas:
                    default: 1
                    format: int32
                    type: integer
                  resources:
                    properties:
                      limits:
                        properties:
                          cpu:
                            default: 4000m
                            type: string
                          memory:
                            default: 4Gi
                            type: string
                        type: object
                      requests:
                        properties:
                          cpu:
                            default: 500m
                            type: string
                          memory:
                            default: 500Mi
                            type: string
                        type: object
                    type: object
                type: object
              properties:
                additionalProperties:
                  type: string
                type: object
              securityContext:
                properties:
                  fsGroup:
                    default: 1000
                    description: "A special supplemental group that applies to all
                      containers in a pod. Some volume types allow the Kubelet to
                      change the ownership of that volume to be owned by the pod:
                      \n 1. The owning GID will be the FSGroup 2. The setgid bit is
                      set (new files created in the volume will be owned by FSGroup)
                      3. The permission bits are OR'd with rw-rw---- \n If unset,
                      the Kubelet will not modify the ownership and permissions of
                      any volume. Note that this field cannot be set when spec.os.name
                      is windows."
                    format: int64
                    type: integer
                  runAsGroup:
                    default: 1000
                    description: The GID to run the entrypoint of the container process.
                      Uses runtime default if unset. May also be set in SecurityContext.  If
                      set in both SecurityContext and PodSecurityContext, the value
                      specified in SecurityContext takes precedence for that container.
                      Note that this field cannot be set when spec.os.name is windows.
                    format: int64
                    type: integer
                  runAsUser:
                    default: 1000
                    description: The UID to run the entrypoint of the container process.
                      Defaults to user specified in image metadata if unspecified.
                      May also be set in SecurityContext.  If set in both SecurityContext
                      and PodSecurityContext, the value specified in SecurityContext
                      takes precedence for that container. Note that this field cannot
                      be set when spec.os.name is windows.
                    format: int64
                    type: integer
                type: object
              shortCircuit:
                properties:
                  enabled:
                    default: true
                    type: boolean
                  path:
                    default: /tmp/
                    type: string
                  policy:
                    default: uuid
                    type: integer
                  size:
                    default: 100Mi
                    type: string
                  volumeType:
                    default: hostPath
                    type: string
                type: object
              tieredStore:
                items:
                  properties:
                    alias:
                      type: string
                    high:
                      type: number
                    level:
                      format: int32
                      type: integer
                    low:
                      type: number
                    mediumType:
                      type: string
                    name:
                      type: string
                    path:
                      type: string
                    quota:
                      type: string
                    type:
                      type: string
                  required:
                  - alias
                  - high
                  - level
                  - low
                  - mediumType
                  - name
                  - path
                  - quota
                  - type
                  type: object
                type: array
              worker:
                properties:
                  args:
                    default:
                    - worker
                    - --no-format
                    items:
                      type: string
                    type: array
                  ports:
                    properties:
                      rpc:
                        default: 29999
                        format: int32
                        type: integer
                      web:
                        default: 30000
                        format: int32
                        type: integer
                    type: object
                  properties:
                    additionalProperties:
                      type: string
                    type: object
                  resources:
                    properties:
                      limits:
                        properties:
                          cpu:
                            default: 4000m
                            type: string
                          memory:
                            default: 4Gi
                            type: string
                        type: object
                      requests:
                        properties:
                          cpu:
                            default: 500m
                            type: string
                          memory:
                            default: 500Mi
                            type: string
                        type: object
                    type: object
                type: object
            required:
            - image
            type: object
          status:
            description: AlluxioStatus defines the observed state of Alluxio
            properties:
              condition:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              urls:
                items:
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                  required:
                  - name
                  - url
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
